/*
 * AMAR : Api de MAj du Rass
 * API to query, create, update and delete entries in the eCPS copy of the RASS referential
 *
 * OpenAPI spec version: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package fr.ans.psc.amar.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * ApiError
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-01T09:34:49.260Z[GMT]")
public class ApiError {
  @JsonProperty("faultyFields")
  private List<String> faultyFields = null;

  @JsonProperty("faultyValues")
  private List<Object> faultyValues = null;

  @JsonProperty("errorMessage")
  private String errorMessage = null;

  @JsonProperty("path")
  private String path = null;

  public ApiError faultyFields(List<String> faultyFields) {
    this.faultyFields = faultyFields;
    return this;
  }

  public ApiError addFaultyFieldsItem(String faultyFieldsItem) {
    if (this.faultyFields == null) {
      this.faultyFields = new ArrayList<String>();
    }
    this.faultyFields.add(faultyFieldsItem);
    return this;
  }

   /**
   * Get faultyFields
   * @return faultyFields
  **/
  @Schema(description = "")
  public List<String> getFaultyFields() {
    return faultyFields;
  }

  public void setFaultyFields(List<String> faultyFields) {
    this.faultyFields = faultyFields;
  }

  public ApiError faultyValues(List<Object> faultyValues) {
    this.faultyValues = faultyValues;
    return this;
  }

  public ApiError addFaultyValuesItem(Object faultyValuesItem) {
    if (this.faultyValues == null) {
      this.faultyValues = new ArrayList<Object>();
    }
    this.faultyValues.add(faultyValuesItem);
    return this;
  }

   /**
   * Get faultyValues
   * @return faultyValues
  **/
  @Schema(description = "")
  public List<Object> getFaultyValues() {
    return faultyValues;
  }

  public void setFaultyValues(List<Object> faultyValues) {
    this.faultyValues = faultyValues;
  }

  public ApiError errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * Get errorMessage
   * @return errorMessage
  **/
  @Schema(description = "")
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }

  public ApiError path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @Schema(description = "")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiError apiError = (ApiError) o;
    return Objects.equals(this.faultyFields, apiError.faultyFields) &&
        Objects.equals(this.faultyValues, apiError.faultyValues) &&
        Objects.equals(this.errorMessage, apiError.errorMessage) &&
        Objects.equals(this.path, apiError.path);
  }

  @Override
  public int hashCode() {
    return Objects.hash(faultyFields, faultyValues, errorMessage, path);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiError {\n");

    sb.append("    faultyFields: ").append(toIndentedString(faultyFields)).append("\n");
    sb.append("    faultyValues: ").append(toIndentedString(faultyValues)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
